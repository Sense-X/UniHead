simclrv1: &simclrv1
  type: torch_simclrv1
runtime:
  task_names: ssl
dataset: # Required.
  train:
    dataset:
      type: cls
      kwargs:
        meta_file: images/meta/train.txt
        meta_type: moco_imagenet
        image_reader:
          type: fs_pillow
          kwargs:
            image_dir: images/train
            color_mode: RGB
            memcached: true
        transformer: [*simclrv1]
    batch_sampler:
      type: base
      kwargs:
        sampler:
          type: dist
          kwargs: {}
        batch_size: 256
    dataloader:
      type: cls_base
      kwargs:
        num_workers: 12
        pin_memory: true

trainer: # Required.
  max_epoch: 100
  test_freq: 500
  save_freq: 5
  is_eval: false
  only_save_latest: true
  optimizer:                 # optimizer = SGD(params,lr=0.001,momentum=0.9,weight_decay=0.0001)
    type: LARS
    kwargs:
      lr: 4.8
      momentum: 0.9
      weight_decay: 0.0001
  lr_scheduler:              # lr_scheduler = MultStepLR(optimizer, milestones=[9,14],gamma=0.1)
    warmup_iter: 6250          # 1000 iterations of warmup
    warmup_type: linear
    warmup_register_type: no_scale_lr
    warmup_ratio: 0
    type: CosineAnnealingLR
    kwargs:
      T_max: 100
      eta_min: 0.00001
      warmup_iter: 0

saver: # Required.
  save_dir: simclr_v1_bs4096/checkpoints/cls_std     # dir to save checkpoints
  results_dir: simclr_v1_bs4096/results_dir/cls_std  # dir to save detection results. i.e., bboxes, masks, keypoints
  auto_resume: true  # find last checkpoint from save_dir and resume from it automatically
                     # this option has the highest priority (auto_resume > opts > resume_model > pretrain_model)

hooks:
- type: auto_save_best

net:
- name: backbone
  type: ssl
  multi_model:
  - name: encoder
    type: resnet50
    kwargs:
      frozen_layers: []
      out_layers: [4]         # layer1...4, commonly named Conv2...5
      out_strides: [32]      # tell the strides of output features
      normalize:
        type: solo_bn
      initializer:
        method: msra
  wrappers:
  - type: simclr
    kwargs:
      mlp: true
      num_mlp_layer: 2
      dim: 2048
      output_dim: 128

- name: post_process
  type: base_ssl_postprocess
  kwargs:
    ssl_loss:
      type: simclr_loss

