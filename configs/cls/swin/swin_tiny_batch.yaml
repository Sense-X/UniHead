num_classes: &num_classes 1000
runtime:
  task_names: cls
cutmix_mixup:
  type: torch_cutmix_mixup
  kwargs:
    mixup_alpha: 0.2
    cutmix_alpha: 1.0
    num_classes: *num_classes
    extra_input: true
    transform: true

random_resized_crop: &random_resized_crop
  type: torch_random_resized_crop
  kwargs:
    size: 224
    scale: [0.08, 1]
    interpolation: bicubic

random_horizontal_flip:
  type: torch_random_horizontal_flip

pil_color_jitter:
  type: torch_color_jitter
  kwargs:
    brightness: 0.2
    contrast: 0.2
    saturation: 0.2
    hue: 0.1

rand_erase: &rand_erase
  type: torch_randerase
  kwargs:
    probability: 0.25

auto_augment: &auto_augment
  type: torch_auto_augmentation
  kwargs:
    size: 224
    scale: [0.08, 1]


center_crop: &center_crop
  type: torch_center_crop
  kwargs:
    size: 224

torch_size: &torch_resize
  type: torch_resize
  kwargs:
    size: 256
    interpolation: bicubic

to_tensor: &to_tensor
  type: to_tensor

normalize: &normalize
  type: normalize
  kwargs:
    mean: [0.485, 0.456, 0.406] # ImageNet pretrained statics
    std: [0.229, 0.224, 0.225]

# ema:
#    enable: True
#    kwargs:
#     decay: 0.99996

dataset: # Required.
  train:
    dataset:
      type: cls
      kwargs:
        meta_file: images/meta/train.txt
        image_reader:
          type: fs_pillow
          kwargs:
            image_dir: images/train
            color_mode: RGB
            memcached: false
        transformer: [*random_resized_crop, *auto_augment, *to_tensor, *normalize,
          *rand_erase]
    batch_sampler:
      type: base
      kwargs:
        sampler:
          type: dist
          kwargs: {}
        batch_size: 64
    dataloader:
      type: cls_base
      kwargs:
        num_workers: 12
        pin_memory: true
        batch_fn:
          type: batch_cutmixup
          kwargs:
            mixup_alpha: 0.8
            cutmix_alpha: 1.0
            switch_prob: 0.5
            num_classes: *num_classes
  test:
    dataset:
      type: cls
      kwargs:
        meta_file: images/meta/val.txt
        image_reader:
          type: fs_pillow
          kwargs:
            image_dir: images/val
            color_mode: RGB
            memcached: false
        transformer: [*torch_resize, *center_crop, *to_tensor, *normalize]
        evaluator:
          type: imagenet               # choices = {'COCO', 'VOC', 'MR'}
          kwargs:
            topk: [1, 5]

    batch_sampler:
      type: base
      kwargs:
        sampler:
          type: dist
          kwargs: {}
        batch_size: 64
    dataloader:
      type: cls_base
      kwargs:
        num_workers: 12
        pin_memory: false

trainer: # Required.
  max_epoch: 300
  test_freq: 2
  save_freq: 2
  only_save_latest: true
  optimizer:
    type: AdamW
    kwargs:
      lr: 0.001
      weight_decay: 0.05
    pconfig:
      ln_b:
        type: bias
        kwargs:
          weight_decay: 0.0
      ln_w:
        type: weight
        kwargs:
          weight_decay: 0.0
      linear_b:
        type: bias
        kwargs:
          weight_decay: 0.0
      nodecay: [relative_position_bias_table]
  lr_scheduler:
    warmup_iter: 25020
    warmup_type: linear
    warmup_register_type: no_scale_lr
    warmup_ratio: 0.0001
    type: CosineLREpochScheduler
    kwargs:
      T_max: 300
      eta_min: 0.00001
      warm_epoch: 20

saver: # Required.
  save_dir: swin_tiny_bic_batch_decay/checkpoints/cls_std     # dir to save checkpoints
  results_dir: swin_tiny_bic_batch_decay/results_dir/cls_std  # dir to save detection results. i.e., bboxes, masks, keypoints
  auto_resume: true  # find last checkpoint from save_dir and resume from it automatically
                     # this option has the highest priority (auto_resume > opts > resume_model > pretrain_model)

net:
- name: backbone                # backbone = resnet50(frozen_layers, out_layers, out_strides)
  type: swin_tiny
  kwargs:
    drop_path_rate: 0.2
- name: head
  type: base_cls_head
  kwargs:
    num_classes: *num_classes
    in_plane: 768
    input_feature_idx: -1
- name: post_process
  type: base_cls_postprocess
  kwargs:
    cls_loss:
      type: label_smooth_ce
      kwargs:
        smooth_ratio: 0.1
        num_classes: *num_classes

hooks:
- type: grad_clipper
  kwargs:
    mode: average
    max_norm: 5.0
